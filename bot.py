from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import Bot, Dispatcher, types, executor
from sqlite_requests import Sqlite
from pyrogram import Client
from rdart import RandomArt
import random
from config import *


bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

scheme, rest = proxy.split("://")
credentials, host_port = rest.split("@")
username, password = credentials.split(":")
hostname, port = host_port.split(":")

proxy_dict = {
    "scheme": scheme,
    "hostname": hostname,
    "port": int(port),
    "username": username,
    "password": password
}
pyro = Client(
    "alice",
    api_id=api_id, api_hash=api_hash,
    bot_token=API_TOKEN,
    proxy=proxy_dict
)
pyro.start()

start_msg = '''
üå∏–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞—Ä—Ç—ã —Å danbooru.donmai.us
‚ö°Ô∏è–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "randompost" —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ
–î—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã:
üöÄ/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
üñº/randompost - –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—Ç–∞
üîé/tag - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–≥–æ–≤
üëÅ/seetag - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π —Ç–µ–≥
'''
sql_rq = Sqlite()
stickers = [sticker[0] for sticker in sql_rq.select("select sticker from stickers")]


@dp.message_handler(content_types=[types.ContentType.ANY])
async def echo(message: types.Message):
    sticker = random.choice(stickers)
    user_id = message.from_user.id
    chat_id = message.chat.id
    user_status = await bot.get_chat_member(chat_id=channel_id, user_id=user_id)
    user_status = user_status.status
    '''
    if message.sticker:
        sticker = message.sticker.file_id
        sql_rq.insert_delete(f"insert into stickers values ('{sticker}')")
        print(message.sticker.file_id)'''
    user_banned = sql_rq.select(f"select id from banlist where id = {user_id}")
    user_exists = sql_rq.select(f"select id from userdata where id = {user_id}")
    if not user_exists:
        sql_rq.insert_delete(f"insert into userdata values ({user_id},'', 0)")
    txt = message.text
    if txt is not None and not user_banned:
        if user_status in ["member", "creator", "administrator"] and not user_banned:
            if user_id in adminlist:
                if txt.find("ban") > -1:
                    banned_id = txt.split(" ")[1]
                    sql_rq.insert_delete(f"insert into banlist values ({banned_id})")
                    await bot.send_message(
                        chat_id,
                        f'‚õîÔ∏è<code>{banned_id}</code> banned!',
                        parse_mode="html"
                    )
                if txt.find("pardon") > -1:
                    banned_id = txt.split(" ")[1]
                    sql_rq.insert_delete(f"delete from banlist where id = ({banned_id})")
                    await bot.send_message(
                        chat_id,
                        f'‚úÖ<code>{banned_id}</code> unbanned!',
                        parse_mode="html"
                    )

            if txt.find("/start") > -1:
                await bot.send_sticker(
                    chat_id=chat_id,
                    sticker=sticker
                )
                if chat_id < 0:
                    keyboard = types.ReplyKeyboardRemove()
                else:
                    kb = [[types.KeyboardButton(text="randompost")]]
                    keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
                await bot.send_message(
                    chat_id,
                    start_msg,
                    reply_markup=keyboard
                )

            if txt.find("randompost") > -1:
                tag = sql_rq.select(f"select tag from userdata where id = {user_id}")[0][0]
                rdart = RandomArt(
                    tag=tag,
                    chat_id=chat_id,
                    bot=pyro
                )
                rdart.start()
            if txt.find("/tag") > -1:
                await bot.send_message(
                    chat_id,
                    'üîé–î–ª—è –≤–≤–æ–¥–∞ —Ç–µ–≥–∞ –ø–∏—à–∏—Ç–µ !tag (–≤–∞—à —Ç–µ–≥). –ù–∞–ø—Ä–∏–º–µ—Ä: <code>!tag large_breasts</code>',
                    parse_mode="html"
                )
            if txt.find("/seetag") > -1:
                tag = sql_rq.select(f"select tag from userdata where id = {user_id}")[0][0]
                if tag:
                    await bot.send_message(
                        chat_id,
                        f'üçé–¢–≤–æ–π —Ç–µ–≥: {tag}'
                    )
                else:
                    await bot.send_message(
                        chat_id,
                        'üçè–£ —Ç–µ–±—è –Ω–µ—Ç—É —Ç–µ–≥–æ–≤'
                    )
            if txt.find("!tag") > -1:
                tag_string = txt[5:]
                sql_rq.insert_delete(f"update userdata set tag = '{tag_string}' where id = {user_id}")
                await bot.send_message(
                    chat_id,
                    f'üçä–¢–µ–≥ {tag_string} —É–¥–∞—á–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!'
                )
        else:
            if chat_id > 0:
                keyboard = InlineKeyboardMarkup()
                keyboard.add(InlineKeyboardButton("üîó–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª", url=channel_link))
                await bot.send_message(
                    chat_id=chat_id,
                    text="–ß—Ç–æ–± –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª\n–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –±–æ—Ç –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç",
                    reply_markup=keyboard
                )



executor.start_polling(dp, skip_updates=True)
